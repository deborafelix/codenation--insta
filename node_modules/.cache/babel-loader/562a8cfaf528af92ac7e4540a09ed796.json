{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\debor\\\\codenation\\\\react-15\\\\src\\\\routes\\\\ProfileRoute\\\\ProfileRoute.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport UserProfile from '../../containers/UserProfile';\nimport UserPosts from '../../containers/UserPosts';\nimport Loading from '../../components/Loading';\n\nconst ProfileRoute = () => {\n  const [user, setUser] = useState({});\n  const [posts, setPosts] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    const {\n      pathname\n    } = window.location;\n    const name = pathname.split(\"/users/\")[1];\n    fetch(`https://5e7d0266a917d70016684219.mockapi.io/api/v1/users?search=${name}`).then(res => res.json()).then(([user]) => {\n      setUser(user);\n      setIsLoading(false);\n    });\n  }, []);\n  useEffect(() => {\n    const {\n      id\n    } = user;\n    setIsLoading(true);\n    fetch(`https://5e7d0266a917d70016684219.mockapi.io/api/v1/users/${id}/posts`).then(res => res.json()).then(posts => {\n      setPosts(posts);\n    });\n  }, [user]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"profile-route-route\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, isLoading ? /*#__PURE__*/React.createElement(Loading, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 21\n    }\n  }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(UserProfile, {\n    avatar: user.avatar,\n    name: user.name,\n    username: user.username,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(UserPosts, {\n    posts: posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 11\n    }\n  })));\n};\n\nexport default ProfileRoute;","map":{"version":3,"sources":["C:/Users/debor/codenation/react-15/src/routes/ProfileRoute/ProfileRoute.jsx"],"names":["React","useState","useEffect","UserProfile","UserPosts","Loading","ProfileRoute","user","setUser","posts","setPosts","isLoading","setIsLoading","pathname","window","location","name","split","fetch","then","res","json","id","avatar","username"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,SAAP,MAAsB,4BAAtB;AAEA,OAAOC,OAAP,MAAoB,0BAApB;;AAEA,MAAMC,YAAY,GAAG,MAAM;AACzB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBP,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACU,SAAD,EAAYC,YAAZ,IAA4BX,QAAQ,CAAC,IAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEW,MAAAA;AAAF,QAAeC,MAAM,CAACC,QAA5B;AACA,UAAMC,IAAI,GAAGH,QAAQ,CAACI,KAAT,CAAe,SAAf,EAA0B,CAA1B,CAAb;AACAC,IAAAA,KAAK,CAAE,mEAAkEF,IAAK,EAAzE,CAAL,CACCG,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEM,CAAC,CAACZ,IAAD,CAAD,KAAY;AAChBC,MAAAA,OAAO,CAACD,IAAD,CAAP;AACAK,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KALD;AAMD,GATQ,EASN,EATM,CAAT;AAWAV,EAAAA,SAAS,CAAC,MAAM;AACd,UAAM;AAAEoB,MAAAA;AAAF,QAASf,IAAf;AACAK,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACAM,IAAAA,KAAK,CAAE,4DAA2DI,EAAG,QAAhE,CAAL,CACCH,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEOV,KAAD,IAAW;AACfC,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAJD;AAKD,GARQ,EAQN,CAACF,IAAD,CARM,CAAT;AAWA,sBACE;AAAK,mBAAY,qBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEII,SAAS,gBAAG,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAH,gBACP,uDACA,oBAAC,WAAD;AAAa,IAAA,MAAM,EAAEJ,IAAI,CAACgB,MAA1B;AAAkC,IAAA,IAAI,EAAEhB,IAAI,CAACS,IAA7C;AAAmD,IAAA,QAAQ,EAAET,IAAI,CAACiB,QAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,eAEA,oBAAC,SAAD;AAAW,IAAA,KAAK,EAAEf,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFA,CAHN,CADF;AAcD,CAzCD;;AA2CA,eAAeH,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport UserProfile from '../../containers/UserProfile';\nimport UserPosts from '../../containers/UserPosts';\n\nimport Loading from '../../components/Loading';\n\nconst ProfileRoute = () => {\n  const [user, setUser] = useState({})\n  const [posts, setPosts] = useState([])\n  const [isLoading, setIsLoading] = useState(true)\n\n  useEffect(() => {\n    const { pathname } = window.location;\n    const name = pathname.split(\"/users/\")[1];\n    fetch(`https://5e7d0266a917d70016684219.mockapi.io/api/v1/users?search=${name}`)\n    .then(res => res.json())\n    .then(([user]) => {\n      setUser(user);\n      setIsLoading(false);\n    });\n  }, []);\n\n  useEffect(() => {\n    const { id } = user;\n    setIsLoading(true)\n    fetch(`https://5e7d0266a917d70016684219.mockapi.io/api/v1/users/${id}/posts`)\n    .then(res => res.json())\n    .then((posts) => {\n      setPosts(posts)\n    });\n  }, [user]);\n\n  \n  return (\n    <div data-testid=\"profile-route-route\">\n      {\n        isLoading ? <Loading /> : (\n          <>\n          <UserProfile avatar={user.avatar} name={user.name} username={user.username}/>  \n          <UserPosts posts={posts}/>\n          </>\n        )\n      }\n      \n      \n    </div>\n  );\n};\n\nexport default ProfileRoute;\n"]},"metadata":{},"sourceType":"module"}