{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\debor\\\\codenation\\\\react-15\\\\src\\\\routes\\\\FeedRoute\\\\FeedRoute.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport Stories from '../../containers/Stories';\nimport Loading from '../../components/Loading';\nimport Posts from '../../containers/Posts';\nimport './FeedRoute.scss';\n\nconst FeedRoute = () => {\n  const [posts, setPosts] = useState([]);\n  const [users, setUsers] = useState([]); // TODO Get all users ( create a state  variable)\n  // TODO Get all posts based in all users (create a state variable)\n  // TODO Create a function that receives a user id and uses that to fetch post's api\n  // TODO Get all users' stories (create a state variable)\n  // TODO Get information about loading\n  // TODO Create a function that returns a user based on their id\n\n  function getUsers() {\n    fetch('https://5e7d0266a917d70016684219.mockapi.io/api/v1/users', {\n      method: 'GET'\n    }).then(response => response.json()).then(users => {\n      setUsers(usera);\n      users.forEach(user => {\n        getAllPostsByUser(user.id);\n      });\n    });\n  }\n\n  function getAllPostsByUser(id) {\n    fetch(`https://5e7d0266a917d70016684219.mockapi.io/api/v1/users/${id}/posts`, {\n      method: 'GET'\n    }).then(async response => {\n      const data = await response.json();\n      setPosts(prev => {\n        return [...prev, ...data];\n      });\n      console.log(data);\n    });\n  }\n\n  useEffect(() => {\n    getUsers(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"feed\",\n    \"data-testid\": \"feed-route\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Posts, {\n    posts: posts,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default FeedRoute;","map":{"version":3,"sources":["C:/Users/debor/codenation/react-15/src/routes/FeedRoute/FeedRoute.jsx"],"names":["React","useState","useEffect","Stories","Loading","Posts","FeedRoute","posts","setPosts","users","setUsers","getUsers","fetch","method","then","response","json","usera","forEach","user","getAllPostsByUser","id","data","prev","console","log"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AAEA,OAAOC,OAAP,MAAoB,0BAApB;AACA,OAAOC,OAAP,MAAoB,0BAApB;AAEA,OAAOC,KAAP,MAAkB,wBAAlB;AAEA,OAAO,kBAAP;;AAEA,MAAMC,SAAS,GAAG,MAAM;AACtB,QAAM,CAAEC,KAAF,EAASC,QAAT,IAAsBP,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM,CAAEQ,KAAF,EAASC,QAAT,IAAsBT,QAAQ,CAAC,EAAD,CAApC,CAFsB,CAItB;AACA;AACE;AACF;AACA;AACA;;AAEA,WAASU,QAAT,GAAoB;AAClBC,IAAAA,KAAK,CAAC,0DAAD,EAA6D;AAAEC,MAAAA,MAAM,EAAE;AAAV,KAA7D,CAAL,CACCC,IADD,CACOC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADpB,EAECF,IAFD,CAEOL,KAAD,IAAW;AACfC,MAAAA,QAAQ,CAACO,KAAD,CAAR;AACAR,MAAAA,KAAK,CAACS,OAAN,CAAeC,IAAD,IAAU;AACtBC,QAAAA,iBAAiB,CAACD,IAAI,CAACE,EAAN,CAAjB;AACD,OAFD;AAGD,KAPD;AAQD;;AAED,WAASD,iBAAT,CAA2BC,EAA3B,EAA+B;AAC7BT,IAAAA,KAAK,CAAE,4DAA2DS,EAAG,QAAhE,EACL;AAAER,MAAAA,MAAM,EAAC;AAAT,KADK,CAAL,CAECC,IAFD,CAEO,MAAOC,QAAP,IAAoB;AACzB,YAAMO,IAAI,GAAG,MAAMP,QAAQ,CAACC,IAAT,EAAnB;AACAR,MAAAA,QAAQ,CAAEe,IAAD,IAAU;AACjB,eAAO,CAAC,GAAGA,IAAJ,EAAU,GAAGD,IAAb,CAAP;AACD,OAFO,CAAR;AAGAE,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACD,KARD;AASD;;AAEDpB,EAAAA,SAAS,CAAC,MAAM;AACdS,IAAAA,QAAQ,GADM,CAEhB;AACC,GAHQ,EAGN,EAHM,CAAT;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAsB,mBAAY,YAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEJ,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAKD,CA5CD;;AA8CA,eAAeD,SAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\n\nimport Stories from '../../containers/Stories';\nimport Loading from '../../components/Loading';\n\nimport Posts from '../../containers/Posts';\n\nimport './FeedRoute.scss';\n\nconst FeedRoute = () => {\n  const [ posts, setPosts ] = useState([]);\n  const [ users, setUsers ] = useState([]);\n\n  // TODO Get all users ( create a state  variable)\n  // TODO Get all posts based in all users (create a state variable)\n    // TODO Create a function that receives a user id and uses that to fetch post's api\n  // TODO Get all users' stories (create a state variable)\n  // TODO Get information about loading\n  // TODO Create a function that returns a user based on their id\n\n  function getUsers() {\n    fetch('https://5e7d0266a917d70016684219.mockapi.io/api/v1/users', { method: 'GET'})\n    .then((response) => response.json())\n    .then((users) => {\n      setUsers(usera);\n      users.forEach((user) => {\n        getAllPostsByUser(user.id)\n      })\n    });\n  }\n\n  function getAllPostsByUser(id) {\n    fetch(`https://5e7d0266a917d70016684219.mockapi.io/api/v1/users/${id}/posts`, \n    { method:'GET' })\n    .then( async (response) => {\n      const data = await response.json();\n      setPosts((prev) => {\n        return [...prev, ...data];\n      });\n      console.log(data);\n    })\n  }\n\n  useEffect(() => {\n    getUsers();\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className=\"feed\" data-testid=\"feed-route\">\n      <Posts posts={posts} />\n    </div>\n  );\n};\n\nexport default FeedRoute;\n"]},"metadata":{},"sourceType":"module"}